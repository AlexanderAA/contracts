% references for NWPT14 abstract / contracts work in general

@misc{Haskell2010,
	Howpublished = {edited by Simon Marlow. Available online},
	Key = {Haskell 2010},
	Month = {June},
	Note = {\texttt{http://www.haskell.org/}},
	Opteditor = {Simon Marlow},
	Title = {{Haskell 2010 Language Report}},
	Year = {2010}}

@inproceedings{SPJ2000,
	Address = {New York},
	Author = {{Peyton Jones}, Simon and Eber, Jean-Marc and Seward, Julian},
	Booktitle = {{ICFP '00, Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming}},
	Doi = {http://doi.acm.org/10.1145/351240.351267},
	Isbn = {1-58113-202-6},
	Note = {(Later extended to a book chapter)},
	Pages = {280--292},
	Publisher = {ACM},
	Title = {Composing contracts: an adventure in financial engineering (functional pearl)},
	Year = {2000},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/351240.351267}}

@article{WhenHowDSL05,
	Acknowledgement = {Nelson H. F. Beebe, University of Utah, Department of Mathematics, 110 LCB, 155 S 1400 E RM 233, Salt Lake City, UT 84112-0090, USA, Tel: +1 801 581 5254, FAX: +1 801 581 4148, e-mail: \path|beebe@math.utah.edu|, \path|beebe@acm.org|, \path|beebe@computer.org| (Internet), URL: \path|http://www.math.utah.edu/{\~}beebe/|},
	Author = {Mernik, Marjan and Heering, Jan and Sloane, Anthony M.},
	Fjournal = {ACM Computing Surveys},
	Journal = {ACM Computing Surveys},
	Keywords = {application language; domain analysis; Domain-specific language; language development system},
	Number = {4},
	Optissn = {0360-0300},
	Optmonth = dec,
	Pages = {316--344},
	Title = {When and how to develop domain-specific languages},
	Volume = {37},
	Year = {2005},
	Abstract = {Domain-specific languages (DSLs) are languages
		 tailored to a specific application domain. They offer
		 substantial gains in expressiveness and ease of use
		 compared with general-purpose programming languages in
		 their domain of application. DSL development is hard,
		 requiring both domain knowledge and language
		 development expertise. Few people have both. Not
		 surprisingly, the decision to develop a DSL is often
		 postponed indefinitely, if considered at all, and most
		 DSLs never get beyond the application library stage.
		 Although many articles have been written on the
		 development of particular DSLs, there is very limited
		 literature on DSL development methodologies and many
		 questions remain regarding when and how to develop a
		 DSL. To aid the DSL developer, we identify patterns in
		 the decision, analysis, design, and implementation
		 phases of DSL development. Our patterns improve and
		 extend earlier work on DSL design patterns. We also
		 discuss domain analysis tools and language development
		 systems that may help to speed up DSL development.
		 Finally, we present a number of open problems.}}

@misc{MLFi,
	Author = {{LexiFi}},
	Howpublished = {Web page and white paper},
	Note = {\url{http://www.lexifi.com/technology/contract-description-language}},
	Title = {Contract Description Language ({MLFi})}}


@InProceedings{TFP11Hiperfit,
  author = 	 {Jost Berthold and Andrzej Filinski and Fritz Henglein 
                  and {Ken Friis} Larsen and Mogens Steffensen 
                  and Brian Vinter},
  title = 	 {{Functional High Performance Financial IT 
                  -- The HIPERFIT Research Center in Copenhagen}},
  OPTbooktitle = {Trends in Functional Programming (TFP'11) - 12th 
                 International Symposium, Madrid, Spain, May 16-18, 2011,
                 Revised Selected Papers},
  booktitle = {Trends in Functional Programming (TFP'11) --
               Revised Selected Papers},
  OPTbooktitle = {TFP'11},
  OPTlocation =  {Madrid, Spain},
  pages = 	 {98--113},
  year = 	 {2012},
  editor = 	 {{Pe\~{n}a-Mar\'{i}}, Ricardo and Page, Rex},
  OPTvolume = 	 {7193},
  OPTseries = {LNCS},
  series = 	 {LNCS 7193},
  OPTaddress = 	 {Berlin/Heidelberg},
  publisher = {Springer},
  OPTnote = 	 {},
}

